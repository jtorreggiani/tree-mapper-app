version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.5.3-node-browsers-legacy
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-skeleton-user
          RAILS_ENV: test
      - image: circleci/postgres:10.5-alpine-ram
        environment:
          POSTGRES_USER: circleci-skeleton-user
          POSTGRES_DB: skeleton_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - skeleton-test-bundle-v2-{{ checksum "Gemfile.lock" }}
            - skeleton-test-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: skeleton-test-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - skeleton-test-yarn-{{ checksum "yarn.lock" }}
            - skeleton-test-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: skeleton-test-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Run cucumber in parallel
      - run:
          name: Run cucumber
          command: |
            bundle exec cucumber --format junit --out test_results/cucumber.xml

      # Run rspec in parallel
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Run rubocop in parallel
      - run:
          name: Run rubocop
          command: |
            bundle exec rubocop

      # Run brakeman in parallel
      - run:
          name: Run brakeman
          command: |
            bundle exec brakeman --exit-on-warn .

      # Run rails best practices in parallel
      - run:
          name: Run rails best practices
          command: |
            bundle exec rails_best_practices .

      # Run yardstick in parallel
      - run:
          name: Run yardstick coverage
          command: |
            ./script/yard_coverage

      # Save test results for timing analysis
      - store_test_results:
          path: test_results

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
